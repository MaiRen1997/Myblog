(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{702:function(v,_,t){"use strict";t.r(_);var a=t(7),e=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"环境准备"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[v._v("#")]),v._v(" 环境准备")]),v._v(" "),_("p",[v._v("如果希望快速开始使用 Python 处理数据科学相关的工作，建议大家直接安装 Anaconda，然后使用 Anaconda 中集成的 Notebook 或 JupyterLab 工具来编写代码。因为对于新手来说，先安装官方的 Python 解释器，再逐个安装工作中会使用到的三方库文件会比较麻烦，尤其是在 Windows 环境下，经常会因为构建工具或 DLL 文件的缺失导致安装失败，而一般新手也很难根据错误提示信息采取正确的解决措施，容易产生严重的挫败感。如果计算机上已经有 Python 解释器环境了，也可以直接使用 Python 的包管理工具 pip 安装 Jupyter，再根据实际工作的需要安装三方库，这种方式适合有一定经验的用户。")]),v._v(" "),_("h3",{attrs:{id:"安装和使用-anaconda"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用-anaconda"}},[v._v("#")]),v._v(" 安装和使用 Anaconda")]),v._v(" "),_("p",[v._v("对于个人用户来说，可以从 Anaconda 的"),_("a",{attrs:{href:"https://www.anaconda.com/",target:"_blank",rel:"noopener noreferrer"}},[v._v("官方网站"),_("OutboundLink")],1),v._v("下载它的“个人版（Individual Edition）”安装程序，安装完成后，你的计算机上不仅拥有了 Python 环境和 Spyder（类似于 PyCharm 的集成开发工具），还拥有了与数据科学工作相关的近200个工具包，包括我们上面提到 Python 数据分析三大神器。除此之外，Anaconda 还提供了一个名为 conda 的包管理工具，通过这个工具不仅可以管理 Python 的工具包，还可以用于创建运行 Python 程序的虚拟环境。")]),v._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"res/download-anaconda.png"}}),v._v(" "),_("p",[v._v("如上图所示，可以通过 Anaconda 官网提供的下载链接选择适合自己操作系统的安装程序，建议大家选择图形化的安装程序，下载完成后双击安装程序开始安装。安装过程基本使用默认设置即可，完成安装后，macOS 用户可以在“应用程序”或“启动台”中找到名为“Anaconda-Navigator”的应用程序，运行该程序可以看到如下所示的界面，我们可以在这里选择需要执行的操作。")]),v._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"res/anaconda_navigator.png"}}),v._v(" "),_("p",[v._v("对于 Windows 用户，建议按照安装向导的提示和推荐的选项来安装 Anaconda（除了安装路径，基本也没有什么需要选择的），安装完成后可以在“开始菜单”中找到“Anaconda3”。")]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("提示")]),v._v("：可以选择 Miniconda 作为 Anaconda 的替代品，Miniconda 只会安装 Python 解释器环境和一些必要的工具，其他的三方库由用户自行选择安装。"),_("strong",[v._v("其实我个人并不喜欢 Anaconda，因为它是给小白用户使用的，我们有了 Python 环境以后完全可以按照自己的意愿来安装需要的三方库")]),v._v("。")])]),v._v(" "),_("h4",{attrs:{id:"conda命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#conda命令"}},[v._v("#")]),v._v(" conda命令")]),v._v(" "),_("p",[v._v("对于非新手用户，如果希望使用 conda 工具来管理依赖项或者创建项目的虚拟环境，可以在终端或命令行提示符中使用 conda 命令。Windows 用户可以在“开始菜单”中找到“Anaconda3”，然后点击“Anaconda Prompt”或“Anaconda PowerShell”来启动支持 conda 的命令行提示符。新手用户如果想创建新的虚拟环境或管理三方库（依赖项），建议直接使用“Anaconda-Navigator”中的“Environments”，通过可视化的方式对虚拟环境和依赖项进行管理。")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("版本和帮助信息。")]),v._v(" "),_("ul",[_("li",[v._v("查看版本："),_("code",[v._v("conda -V")]),v._v("或"),_("code",[v._v("conda --version")])]),v._v(" "),_("li",[v._v("获取帮助："),_("code",[v._v("conda -h")]),v._v("或"),_("code",[v._v("conda --help")])]),v._v(" "),_("li",[v._v("相关信息："),_("code",[v._v("conda list")])])])]),v._v(" "),_("li",[_("p",[v._v("虚拟环境相关。")]),v._v(" "),_("ul",[_("li",[v._v("显示所有虚拟环境："),_("code",[v._v("conda env list")])]),v._v(" "),_("li",[v._v("创建虚拟环境："),_("code",[v._v("conda create --name venv")])]),v._v(" "),_("li",[v._v("指定 Python 版本创建虚拟环境："),_("code",[v._v("conda create --name venv python=3.7")])]),v._v(" "),_("li",[v._v("指定 Python 版本创建虚拟环境并安装指定依赖项："),_("code",[v._v("conda create --name venv python=3.7 numpy pandas")])]),v._v(" "),_("li",[v._v("通过克隆现有虚拟环境的方式创建虚拟环境："),_("code",[v._v("conda create --name venv2 --clone venv")])]),v._v(" "),_("li",[v._v("分享虚拟环境并重定向到指定的文件中："),_("code",[v._v("conda env export > environment.yml")])]),v._v(" "),_("li",[v._v("通过分享的虚拟环境文件创建虚拟环境："),_("code",[v._v("conda env create -f environment.yml")])]),v._v(" "),_("li",[v._v("激活虚拟环境："),_("code",[v._v("conda activate venv")])]),v._v(" "),_("li",[v._v("退出虚拟环境："),_("code",[v._v("conda deactivate")])]),v._v(" "),_("li",[v._v("删除虚拟环境："),_("code",[v._v("conda remove --name venv --all")])])]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("说明")]),v._v("：上面的命令中，"),_("code",[v._v("venv")]),v._v("和"),_("code",[v._v("venv2")]),v._v("是虚拟环境文件夹的名字，可以将其替换为自己喜欢的名字，但是"),_("strong",[v._v("强烈建议")]),v._v("使用英文且不要有特殊字符。")])])]),v._v(" "),_("li",[_("p",[v._v("包（三方库或工具）管理。")]),v._v(" "),_("ul",[_("li",[v._v("查看已经安装的包："),_("code",[v._v("conda list")])]),v._v(" "),_("li",[v._v("搜索指定的包："),_("code",[v._v("conda search matplotlib")])]),v._v(" "),_("li",[v._v("安装指定的包："),_("code",[v._v("conda install matplotlib")])]),v._v(" "),_("li",[v._v("更新指定的包："),_("code",[v._v("conda update matplotlib")])]),v._v(" "),_("li",[v._v("移除指定的包："),_("code",[v._v("conda remove matplotlib")])])]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("说明")]),v._v("：在搜索、安装和更新软件包时，默认会连接到官方网站进行操作，如果觉得速度不给力，可以将默认的官方网站替换为国内的镜像网站，推荐使用清华大学的开源镜像网站。将默认源更换为国内镜像的命令是："),_("code",[v._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/")]),v._v("和"),_("code",[v._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main")]),v._v("。如果需要换回默认源，可以使用命令"),_("code",[v._v("conda config --remove-key channels")]),v._v("。")])])])]),v._v(" "),_("h3",{attrs:{id:"安装和使用jupyterlab"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用jupyterlab"}},[v._v("#")]),v._v(" 安装和使用JupyterLab")]),v._v(" "),_("h4",{attrs:{id:"安装和启动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装和启动"}},[v._v("#")]),v._v(" 安装和启动")]),v._v(" "),_("p",[v._v("如果已经安装了 Anaconda，可以按照上面所说的方式在“Anaconda-Navigator”中直接启动 Notebook 或 JupyterLab。按照官方的说法，JupyterLab 是下一代的 Notebook，提供了更友好的界面和更强大的功能，我们也推荐大家使用 JupyterLab。Windows 用户也可以在开始菜单中打开“Anaconda Prompt”或“Anaconda PowerShell”，由于已经激活了 Anaconda 默认的虚拟环境，只需要输入"),_("code",[v._v("jupyter lab")]),v._v("命令来启动JupyterLab。macOS 系统在安装 Anaconda以后，每次打开终端时会自动激活 Anaconda 默认的虚拟环境，也是通过输入"),_("code",[v._v("jupyter lab")]),v._v("命令就可以启动JupyterLab。")]),v._v(" "),_("p",[v._v("对于安装了 Python 环境但是没有安装 Anaconda 的用户，可以用 Python 的包管理工具"),_("code",[v._v("pip")]),v._v("来安装 JupyterLab，安装成功后在终端或命令行提示符中执行"),_("code",[v._v("jupyter lab")]),v._v("命令来启动 JupyterLab，如下所示。")]),v._v(" "),_("p",[v._v("安装 JupyterLab：")]),v._v(" "),_("div",{staticClass:"language-Bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[v._v("pip "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("install")]),v._v(" jupyterlab\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("安装 Python 数据分析三大神器：")]),v._v(" "),_("div",{staticClass:"language-Bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[v._v("pip "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("install")]),v._v(" numpy pandas matplotlib\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("启动 JupyterLab：")]),v._v(" "),_("div",{staticClass:"language-Bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[v._v("jupyter lab\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("JupyterLab 是基于网页的用于交互计算的应用程序，可以用于代码开发、文档撰写、代码运行和结果展示。简单的说，你可以在网页中直接"),_("strong",[v._v("编写代码")]),v._v("和"),_("strong",[v._v("运行代码")]),v._v("，代码的运行结果也会直接在代码块下方进行展示。如在编写代码的过程中需要编写说明文档，可在同一个页面中使用 Markdown 格式进行编写，而且可以直接看到渲染后的效果。此外，Notebook 的设计初衷是提供一个能够支持多种编程语言的工作环境，目前它能够支持超过40种编程语言，包括 Python、R、Julia、Scala 等。")]),v._v(" "),_("p",[v._v("首先，我们可以创建一个用于书写 Python 代码的 Notebook，如下图所示。")]),v._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"res/JupyterLab_1.png"}}),v._v(" "),_("p",[v._v("接下来，我们就可以编写代码、撰写文档和运行程序啦，如下图所示。")]),v._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"res/JupyterLab_2.png"}}),v._v(" "),_("h4",{attrs:{id:"使用技巧"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用技巧"}},[v._v("#")]),v._v(" 使用技巧")]),v._v(" "),_("p",[v._v("如果使用 Python 做工程化的项目开发，PyCharm 肯定是最好的选择，它提供了一个集成开发环境应该具有的所有功能，尤其是智能提示、代码补全、自动纠错这类功能会让开发人员感到非常舒服。如果使用 Python 做数据科学相关的工作，JupyterLab 并不比 PyCharm 逊色，在数据和图表展示方面 JupyterLab 更加优秀。为此，JetBrains 公司还专门开发了一个对标 JupyterLab 的新工具 DataSpell，有兴趣的读者可以自行了解。下面我们为大家介绍一些 JupyterLab 的使用技巧，希望能够帮助大家提升工作效率。")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("自动补全。在使用 JupyterLab 编写代码时，按"),_("code",[v._v("Tab")]),v._v("键会获得代码提示和补全功能。")])]),v._v(" "),_("li",[_("p",[v._v("获得帮助。如果希望了解一个对象（如变量、类、函数等）的相关信息或使用方式，可以在对象后面使用"),_("code",[v._v("?")]),v._v("并运行代码， 窗口下方会显示出对应的信息，帮助我们了解该对象，如下所示。")]),v._v(" "),_("img",{staticStyle:{zoom:"100%"},attrs:{src:"res/JupyterLab_3.png"}})]),v._v(" "),_("li",[_("p",[v._v("搜索命名。如果只记得一个类或一个函数名字的一部分，可以使用通配符"),_("code",[v._v("*")]),v._v("并配合"),_("code",[v._v("?")]),v._v("进行搜索，如下所示。")]),v._v(" "),_("img",{staticStyle:{zoom:"100%"},attrs:{src:"res/JupyterLab_4.png"}})]),v._v(" "),_("li",[_("p",[v._v("调用命令。可以在 JupyterLab 中使用"),_("code",[v._v("!")]),v._v("后面跟系统命令的方式来执行系统命令。")])]),v._v(" "),_("li",[_("p",[v._v("魔法指令。JupyterLab 中有很多非常有趣且有用的魔法指令，例如可以使用"),_("code",[v._v("%timeit")]),v._v("测试语句的执行时间，可以使用"),_("code",[v._v("%pwd")]),v._v("查看当前工作目录等。如果想查看所有的魔法指令，可以使用"),_("code",[v._v("%lsmagic")]),v._v("，如果了解魔法指令的用法，可以使用"),_("code",[v._v("%magic")]),v._v("来查看，如下图所示。")]),v._v(" "),_("img",{staticStyle:{zoom:"100%"},attrs:{src:"res/JupyterLab_5.png"}}),v._v(" "),_("p",[v._v("常用的魔法指令有：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("魔法指令")]),v._v(" "),_("th",[v._v("功能说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("%pwd")])]),v._v(" "),_("td",[v._v("查看当前工作目录")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%ls")])]),v._v(" "),_("td",[v._v("列出当前或指定文件夹下的内容")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%cat")])]),v._v(" "),_("td",[v._v("查看指定文件的内容")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%hist")])]),v._v(" "),_("td",[v._v("查看输入历史")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%matplotlib inline")])]),v._v(" "),_("td",[v._v("设置在页面中嵌入matplotlib输出的统计图表")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%config Inlinebackend.figure_format='svg'")])]),v._v(" "),_("td",[v._v("设置统计图表使用SVG格式（矢量图）")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%run")])]),v._v(" "),_("td",[v._v("运行指定的程序")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%load")])]),v._v(" "),_("td",[v._v("加载指定的文件到单元格中")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%quickref")])]),v._v(" "),_("td",[v._v("显示IPython的快速参考")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%timeit")])]),v._v(" "),_("td",[v._v("多次运行代码并统计代码执行时间")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%prun")])]),v._v(" "),_("td",[v._v("用"),_("code",[v._v("cProfile.run")]),v._v("运行代码并显示分析器的输出")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%who")]),v._v(" / "),_("code",[v._v("%whos")])]),v._v(" "),_("td",[v._v("显示命名空间中的变量")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("%xdel")])]),v._v(" "),_("td",[v._v("删除一个对象并清理所有对它的引用")])])])])]),v._v(" "),_("li",[_("p",[v._v("快捷键。JupyterLab 中的很多操作可以通过快捷键来实现，使用快捷键可以提升工作效率。JupyterLab 的快捷键可以分为命令模式下的快捷键和编辑模式下的快捷键，所谓编辑模式就是处于输入代码或撰写文档状态的模式，在编辑模式下按"),_("code",[v._v("Esc")]),v._v("可以回到命令模式，在命令模式下按"),_("code",[v._v("Enter")]),v._v("可以进入编辑模式。")]),v._v(" "),_("p",[v._v("命令模式下的快捷键：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("快捷键")]),v._v(" "),_("th",[v._v("功能说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("Alt")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格并在下面插入新的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格并选中下方的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("j")]),v._v(" / "),_("code",[v._v("k")]),v._v("、"),_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("j")]),v._v(" / "),_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("k")])]),v._v(" "),_("td",[v._v("选中下方/上方单元格、连续选中下方/上方单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("a")]),v._v(" / "),_("code",[v._v("b")])]),v._v(" "),_("td",[v._v("在下方/上方插入新的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("c")]),v._v(" / "),_("code",[v._v("x")])]),v._v(" "),_("td",[v._v("复制单元格 / 剪切单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v")]),v._v(" / "),_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("v")])]),v._v(" "),_("td",[v._v("在下方/上方粘贴单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("dd")]),v._v(" / "),_("code",[v._v("z")])]),v._v(" "),_("td",[v._v("删除单元格 / 恢复删除的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("l")])]),v._v(" "),_("td",[v._v("显示或隐藏当前/所有单元格行号")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Space")]),v._v(" / "),_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("Space")])]),v._v(" "),_("td",[v._v("向下/向上滚动页面")])])])]),v._v(" "),_("p",[v._v("编辑模式下的快捷键：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("快捷键")]),v._v(" "),_("th",[v._v("功能说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("Tab")])]),v._v(" "),_("td",[v._v("获得提示信息")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("]")]),v._v("/ "),_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("[")])]),v._v(" "),_("td",[v._v("增加/减少缩进")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Alt")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格并在下面插入新的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Shift")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格并选中下方的单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("Enter")])]),v._v(" "),_("td",[v._v("运行当前单元格")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("Left")]),v._v(" / "),_("code",[v._v("Right")])]),v._v(" "),_("td",[v._v("光标移到行首/行尾")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Ctrl")]),v._v(" + "),_("code",[v._v("Up")]),v._v(" / "),_("code",[v._v("Down")])]),v._v(" "),_("td",[v._v("光标移动代码开头/结尾处")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("Up")]),v._v(" / "),_("code",[v._v("Down")])]),v._v(" "),_("td",[v._v("光标上移/下移一行或移到上/下一个单元格")])])])]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("说明")]),v._v("：对于 macOS 系统可以将"),_("code",[v._v("Alt")]),v._v("键替换成"),_("code",[v._v("Option")]),v._v("键，将"),_("code",[v._v("Ctrl")]),v._v("键替换成"),_("code",[v._v("Command")]),v._v("键。")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);