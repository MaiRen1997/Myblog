(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{650:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"新建nginx配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新建nginx配置文件"}},[s._v("#")]),s._v(" 新建nginx配置文件")]),s._v(" "),n("p",[s._v("在nginx文件夹中的conf.d文件夹中，新建一个文件，文件名称命名为"),n("code",[s._v("文件名称.conf")]),s._v(",代码如下")]),s._v(" "),n("h2",{attrs:{id:"nginx配置代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置代码"}},[s._v("#")]),s._v(" nginx配置代码")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    listen       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server_name  localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#access_log  /var/log/nginx/host.access.log  main;")]),s._v("\n\n    location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        root   /home/www/wbjFront"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        index  index.html index.htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_page  404              /404.html;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redirect server error pages to the static page /50x.html")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n    error_page   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("502")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("504")]),s._v("  /50x.html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    location "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /50x.html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        root   /usr/share/nginx/html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("如果前端配置proxy，那么nginx,也要拦截接口上的特定字符，用来转发")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("location /api/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        proxy_pass   http://127.0.0.1:8000/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#此处的地址为服务器的地址，以及部署后端代码的端口号")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"重启nginx配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重启nginx配置"}},[s._v("#")]),s._v(" 重启nginx配置")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("nginx "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" reload\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"什么是端口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是端口"}},[s._v("#")]),s._v(" 什么是端口")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("定义：")]),s._v(" 端口是一个数字，用于标识计算机上运行的应用程序或服务。")]),s._v(" "),n("li",[n("strong",[s._v("作用：")]),s._v(" 计算机上的不同应用程序需要进行通信，端口就是用来区分这些不同应用程序的。每个端口都有一个唯一的数字，通常范围是 0 到 65535。")]),s._v(" "),n("li",[n("strong",[s._v("分类：")]),s._v(" "),n("ul",[n("li",[s._v("系统端口（Well-known Ports）： 范围是 0 到 1023，用于一些知名的服务，例如 HTTP 使用的端口 80，HTTPS 使用的端口 443。")]),s._v(" "),n("li",[s._v("注册端口（Registered Ports）： 范围是 1024 到 49151，用于用户注册的应用程序。")]),s._v(" "),n("li",[s._v("动态或私有端口（Dynamic or Private Ports）： 范围是 49152 到 65535，用于动态分配或私有协议。")])])])]),s._v(" "),n("h2",{attrs:{id:"查找nginx占用端口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查找nginx占用端口"}},[s._v("#")]),s._v(" 查找nginx占用端口")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("ps "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("ef"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("grep nginx\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("使用 ps -ef|grep nginx 这个命令来查找当前服务器下，正在运行的nginx进程，一个服务器下可以部署多个nginx来为web项目服务")]),s._v(" "),n("p",[s._v("从上图我查找的nignx进程来看，我服务部署了两个nginx，并且可以看到，每个nginx都有一个master process 和worker process ，在这里表示主进程和工作进程")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/MaiRen1997/mdPic/vueImg/202401231529443.webp",alt:"image.png"}})]),s._v(" "),n("p",[n("code",[s._v("主进程只有一个，但是工作进程可以有多个")]),s._v("。")]),s._v(" "),n("p",[s._v("主进程（Master Process）主要负责管理工作进程，处理配置文件的重新加载等任务。")]),s._v(" "),n("p",[s._v("工作进程（Worker Process）主要用于实际处理客户端请求")]),s._v(" "),n("h2",{attrs:{id:"什么是进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是进程"}},[s._v("#")]),s._v(" 什么是进程")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("定义：")]),s._v(" 进程是计算机中正在运行的程序的实例。一个程序可以同时运行多个进程，每个进程都有自己的内存空间和系统资源。")]),s._v(" "),n("li",[n("strong",[s._v("作用：")]),s._v(" 进程是计算机执行任务和管理资源的基本单位。每个进程都有自己的代码、数据、内存空间，以及与其他进程隔离的执行环境。")]),s._v(" "),n("li",[n("strong",[s._v("特点：")]),s._v(" "),n("ul",[n("li",[s._v("独立性：进程之间是相互独立的，一个进程的错误不会影响其他进程。")]),s._v(" "),n("li",[s._v("并发执行： 计算机可以同时运行多个进程，提高系统的效率和资源利用率。")]),s._v(" "),n("li",[s._v("通信： 进程之间可以通过进程间通信（IPC）进行数据交换和协作。")])])])]),s._v(" "),n("h2",{attrs:{id:"清除进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#清除进程"}},[s._v("#")]),s._v(" 清除进程")]),s._v(" "),n("p",[s._v("由于进程的独立性，每个进程都会拥有自己的端口，昨天在部署前端环境的时候，起了8088的nginx配置， 会出现以下的情况 "),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/MaiRen1997/mdPic/vueImg/202401231554587.webp",alt:"image.png"}})]),s._v(" "),n("p",[s._v("会显示nginx想要在8088端口上面启动，但是发现该端口已经被占用了， Address already in use，地址已经被使用了，当前的nginx想要再次在这个端口启动服务是不行的。")]),s._v(" "),n("p",[s._v("因为在计算机上的应用程序需要和网络进行通信时，它会使用端口来标识自己，而网络上的其他计算机可以通过指定端口来连接到该应用程序，所以每个端口也可以说是地址都应该是唯一的")]),s._v(" "),n("p",[s._v("当遇到这个情况可以找到已经使用的端口来进行清除，前提你知道这个端口用的服务是不重要的，可以直接kill的")]),s._v(" "),n("h2",{attrs:{id:"最后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[s._v("#")]),s._v(" 最后")]),s._v(" "),n("p",[s._v("使用 sudo netstat -tulpn | grep :8088 来查找某个端口使用的进程")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/MaiRen1997/mdPic/vueImg/202401231554583.webp",alt:"image.png"}})]),s._v(" "),n("p",[s._v("可以看到是某个以321结尾的进程号的进程占用了8088的端口，我们直接清除即可")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/MaiRen1997/mdPic/vueImg/202401231529415.webp",alt:"image.png"}})]),s._v(" "),n("p",[s._v("清除完成之后即可重新启动nginx在8088端口上")])])}),[],!1,null,null,null);n.default=e.exports}}]);