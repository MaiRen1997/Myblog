(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{613:function(t,a,v){"use strict";v.r(a);var _=v(7),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"进程与线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),a("h3",{attrs:{id:"进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),a("h4",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("进程(Process)：是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。（文件静静的躺在磁盘上和咸鱼无异，只有."),a("code",[t._v("exe")]),t._v("文件(可执行文件)运行了才能称作为进程）")]),t._v(" "),a("h4",{attrs:{id:"特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[t._v("#")]),t._v(" 特征")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("动态性：")]),t._v(" "),a("p",[t._v("进程的实质是程序在系统中的一次执行过程，进程是动态产生，动态消亡的；（动起来的，活得）")])]),t._v(" "),a("li",[a("p",[t._v("并发性")]),t._v(" "),a("p",[t._v("任何进程都可以同其他进程一起并发执行；（多个好兄弟一起干）")])]),t._v(" "),a("li",[a("p",[t._v("独立性")]),t._v(" "),a("p",[t._v("进程是一个能独立运行的基本单位，同时也是系统分配资源和调度的独立单位；（各干各地）")])]),t._v(" "),a("li",[a("p",[t._v("异步性")]),t._v(" "),a("p",[t._v("由于进程间的相互制约，使进程具有执行的间断性，即进程按各自独立的、不可预知的速度向前推进；（你是你，我是我）")])])]),t._v(" "),a("h3",{attrs:{id:"线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),a("h4",{attrs:{id:"定义-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("线程(thread)：是进程中执行运算的最小单位。")]),t._v(" "),a("h4",{attrs:{id:"特征-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征-2"}},[t._v("#")]),t._v(" 特征")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("原子性")]),t._v(" "),a("p",[t._v("线程的原子性就是数据在被一个线程执行的时候，其他线程不可以同时再运行此数据;(面前有一支笔，我用的时候别人就不能用了)")])]),t._v(" "),a("li",[a("p",[t._v("可见性")])]),t._v(" "),a("li",[a("p",[t._v("​        指当一个线程修改了共享变量的值，其它线程能够适时得知这个修改；（多人在建一座房子时，一个人建好一层后，其他人都知道他建好了）")])]),t._v(" "),a("li",[a("p",[t._v("有序性")])]),t._v(" "),a("li",[a("p",[t._v("​        有序性是指程序在执行的时候，程序的代码执行顺序和语句的顺序是一致的。（按流程办事 ）")])])]),t._v(" "),a("p",[t._v("注意：cpu在真正执行顺序可能会不一致，因为（CPU速度是内存读取数据的速度的100倍）所以为了提高性能，编译器和处理器常常会对指令做重排序；重排序不会影响单线程的执行结果，但是在并发情况下，可能会出现诡异的BUG。")]),t._v(" "),a("h2",{attrs:{id:"串行、并行、并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#串行、并行、并发"}},[t._v("#")]),t._v(" 串行、并行、并发")])])}),[],!1,null,null,null);a.default=s.exports}}]);