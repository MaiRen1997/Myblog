(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{646:function(e,t,v){"use strict";v.r(t);var a=v(7),_=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[e._v("#")]),e._v(" 背景")]),e._v(" "),t("p",[e._v("我们经常会遇到，一个页面添加计时器后，"),t("code",[e._v("离开页面，计时器仍然在计数")]),e._v("，如果"),t("code",[e._v("计时器过多，或者计时器调用了接口，就会造成内存泄漏或者性能变慢")])]),e._v(" "),t("h2",{attrs:{id:"分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[e._v("#")]),e._v(" 分析")]),e._v(" "),t("p",[e._v("综合有以下几种原因：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("没有在页面销毁时，清空计时器")])]),e._v(" "),t("li",[t("p",[e._v("在多个生命周期时，同时定义了计时器，造成进入页面，开启了多个计时器")]),e._v(" "),t("p",[e._v("在此情况下，你需要了解：")]),e._v(" "),t("ol",[t("li",[e._v("页面进入时，所触发的生命周期的顺序")]),e._v(" "),t("li",[e._v("如何适当的清空计时器")])])])]),e._v(" "),t("h2",{attrs:{id:"vue页面触发生命周期的顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue页面触发生命周期的顺序"}},[e._v("#")]),e._v(" vue页面触发生命周期的顺序")]),e._v(" "),t("h3",{attrs:{id:"首次进入页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首次进入页面"}},[e._v("#")]),e._v(" 首次进入页面：")]),e._v(" "),t("ol",[t("li",[e._v("beforeCreate")]),e._v(" "),t("li",[e._v("created")]),e._v(" "),t("li",[e._v("beforeMount")]),e._v(" "),t("li",[e._v("mounted")])]),e._v(" "),t("h3",{attrs:{id:"带缓存-首次进入页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#带缓存-首次进入页面"}},[e._v("#")]),e._v(" (带缓存)首次进入页面")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("beforeCreate")])]),e._v(" "),t("li",[t("p",[e._v("created")])]),e._v(" "),t("li",[t("p",[e._v("beforeMount")])]),e._v(" "),t("li",[t("p",[e._v("mounted")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("activated")])]),e._v(" "),t("p",[e._v("如果使用了keep-alive包裹组件，那么组件会"),t("code",[e._v("多出来activated和deactivated这两个生命周期")]),e._v("，但是"),t("code",[e._v("不会再触发beforeDestroy和destroyed 的了")])]),e._v(" "),t("p",[e._v("这种缓存现象，不论路由中的组件，是懒式加载还是直接加载，都会触发这些生命周期钩子")])])]),e._v(" "),t("h2",{attrs:{id:"设置计时器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置计时器"}},[e._v("#")]),e._v(" 设置计时器")]),e._v(" "),t("p",[e._v("了解上面生命周期运行规律，接下来就需要，在合适的生命周期钩子中，设置计时器了")]),e._v(" "),t("h3",{attrs:{id:"存在路由缓存的页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存在路由缓存的页面"}},[e._v("#")]),e._v(" 存在路由缓存的页面")]),e._v(" "),t("ol",[t("li",[e._v("在activated生命周期中，添加计时器，")]),e._v(" "),t("li",[e._v("在deactivated生命周期中，清除计时器")])]),e._v(" "),t("h3",{attrs:{id:"不使用路由缓存的页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不使用路由缓存的页面"}},[e._v("#")]),e._v(" 不使用路由缓存的页面")]),e._v(" "),t("ol",[t("li",[e._v("在beforeCreate，created，beforeMount，mounted生命周期中，添加计时器(只能选择一个计时器进行添加)")]),e._v(" "),t("li",[e._v("在before")]),e._v(" "),t("li",[e._v("生命周期中，清除计时器")])]),e._v(" "),t("h3",{attrs:{id:"异步导致的计时器无法清除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步导致的计时器无法清除"}},[e._v("#")]),e._v(" 异步导致的计时器无法清除")]),e._v(" "),t("p",[e._v("如果你在beforeCreate，created，beforeMount，mounted，都设置了计时器，并且在设置计时器前，清除了记录计时器的句柄，某些情况下，可以达到你的要求，但是一些特殊情况，可能出现计数器无法清除")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("你在异步请求里，做了设置计时器操作")]),e._v(" "),t("p",[e._v("那么在移步请求完成后，才会设置计时器")]),e._v(" "),t("p",[e._v("此时下一个生命周期钩子，已经开始执行了，句柄变量记录的就是当前计时器的句柄，这时即使做清空操作，也无法清除上面的 生命周期钩子创造的计时器了，只能通过刷新页面解决")])])]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("ol",[t("li",[e._v("不要在多个生命周期钩子里设置计时器")]),e._v(" "),t("li",[e._v("存在路由缓存的页面，在activated添加计时器，在deactivated清除计时器")]),e._v(" "),t("li",[e._v("不使用路由缓存的页面，在beforeCreate，created，beforeMount，mounted任意一个，添加计时器,在beforeDestotry中销毁")]),e._v(" "),t("li",[e._v("禁止在多个生命周期钩子，异步函数中，定义计时器")])])])}),[],!1,null,null,null);t.default=_.exports}}]);